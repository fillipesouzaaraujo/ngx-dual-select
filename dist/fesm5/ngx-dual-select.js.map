{"version":3,"file":"ngx-dual-select.js","sources":["ng://ngx-dual-select/src/app/ngx-dual-select/components/dual-select/ngx-dual-select.component.ts","ng://ngx-dual-select/src/app/shared/pipes/filter.pipe.ts","ng://ngx-dual-select/src/app/shared/shared.module.ts","ng://ngx-dual-select/src/app/ngx-dual-select/ngx-dual-select.module.ts","ng://ngx-dual-select/ngx-dual-select.ts"],"sourcesContent":["import { Component, OnInit, Input, Output, EventEmitter, OnChanges, SimpleChanges } from '@angular/core';\r\n\r\n\r\nexport interface Item {\r\n  title: string;\r\n  subtitle?: string;\r\n  active: boolean,\r\n  compare: any\r\n}\r\n\r\n@Component({\r\n  selector: 'app-ngx-dual-select',\r\n  templateUrl: './ngx-dual-select.component.html',\r\n  styleUrls: ['./ngx-dual-select.component.scss']\r\n})\r\nexport class NgxDualSelectComponent implements OnInit, OnChanges {\r\n\r\n  @Input() leftTitle: string;\r\n  @Input() rightTitle: string;\r\n  @Input() listA: Array<any>;\r\n  @Input() titleItem: string;\r\n  @Input() subTitleItem?: string;\r\n  @Input() buttonClass?: string;\r\n  @Output() selectedItems: EventEmitter<Array<any>> = new EventEmitter<Array<any>>();\r\n  listItems: Item[] = [];\r\n  listItemsSelected: Item[] = [];\r\n  searchTextA = '';\r\n  searchTextB = '';\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n    this.mockLoadItems();\r\n  }\r\n\r\n  ngOnChanges($event: SimpleChanges) {\r\n    if ($event.listA.currentValue) {\r\n      this.listA.forEach(item => {\r\n        this.listItems.push(\r\n          { title: item[this.titleItem], subtitle: (this.subTitleItem) ? item[this.subTitleItem] : null, active: false, compare: item }\r\n        );\r\n      });\r\n    }\r\n  }\r\n\r\n  private mockLoadItems() {\r\n\r\n  }\r\n\r\n\r\n  private emitSelectedItems() {\r\n    const listB: Array<any> = [];\r\n    this.listItemsSelected.forEach(item => {\r\n      this.listA.forEach(itemA => {\r\n        if (item.compare === itemA) {\r\n          listB.push(itemA);\r\n        }\r\n      });\r\n    });\r\n    this.selectedItems.emit(listB);\r\n  }\r\n\r\n  selectItem(item: Item) {\r\n    item.active = !item.active;\r\n  }\r\n\r\n  moveSelected(direction: string, all: boolean) {\r\n    switch (direction) {\r\n      case 'right':\r\n        this.moveSelectedRight(all);\r\n        break;\r\n      case 'left':\r\n        this.moveSelectedLeft(all);\r\n        break;\r\n    }\r\n  }\r\n\r\n\r\n  orderBy(list: Array<any>, field?: string): Array<any> {\r\n    if (field) {\r\n      return list.sort((n1, n2) => {\r\n        if (n1[field] > n2[field]) {\r\n          return 1;\r\n        }\r\n        if (n1[field] < n2[field]) {\r\n          return -1;\r\n        }\r\n        return 0;\r\n      });\r\n    } else {\r\n      return list;\r\n    }\r\n  }\r\n\r\n\r\n  private moveSelectedRight(all: boolean) {\r\n    this.listItems.forEach((item, key) => {\r\n      if (!all) {\r\n        if (item.active) {\r\n          if (this.listItemsSelected.indexOf(item) <= -1) {\r\n            item.active = false;\r\n            this.listItemsSelected.push(item);\r\n          }\r\n        }\r\n      } else {\r\n        item.active = false;\r\n        this.listItemsSelected.push(item);\r\n      }\r\n    });\r\n    this.listItems = this.listItems.filter(item => {\r\n      if (this.listItemsSelected.indexOf(item) === -1) {\r\n        return item;\r\n      }\r\n    });\r\n    this.emitSelectedItems();\r\n  }\r\n\r\n  private moveSelectedLeft(all: boolean) {\r\n    this.listItemsSelected.forEach((item, key) => {\r\n      if (!all) {\r\n        if (item.active) {\r\n          if (this.listItems.indexOf(item) <= -1) {\r\n            item.active = false;\r\n            this.listItems.push(item);\r\n          }\r\n        }\r\n      } else {\r\n        item.active = false;\r\n        this.listItems.push(item);\r\n      }\r\n    });\r\n    this.listItemsSelected = this.listItemsSelected.filter(item => {\r\n      if (this.listItems.indexOf(item) === -1) {\r\n        return item;\r\n      }\r\n    });\r\n    this.emitSelectedItems();\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'filter'\r\n})\r\nexport class FilterPipe implements PipeTransform {\r\n\r\n  transform(items: any[], searchText: string, fieldName: string): any[] {\r\n\r\n    // return empty array if array is falsy\r\n    if (!items) { return []; }\r\n\r\n    // return the original array if search text is empty\r\n    if (!searchText) { return items; }\r\n\r\n    // convert the searchText to lower case\r\n    searchText = searchText.toLowerCase();\r\n\r\n    // retrun the filtered array\r\n    return items.filter(item => {\r\n      if (item && item[fieldName]) {\r\n        return item[fieldName].toLowerCase().includes(searchText);\r\n      }\r\n      return false;\r\n    });\r\n  }\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FilterPipe } from './pipes/filter.pipe';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  declarations: [\r\n    FilterPipe\r\n  ],\r\n  exports: [\r\n    FilterPipe\r\n  ]\r\n})\r\nexport class SharedModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgxDualSelectComponent } from './components/dual-select/ngx-dual-select.component';\r\nimport { SharedModule } from '../shared/shared.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    SharedModule,\r\n    FormsModule\r\n  ],\r\n  declarations: [\r\n    NgxDualSelectComponent\r\n  ],\r\n  exports: [\r\n    NgxDualSelectComponent\r\n  ]\r\n})\r\nexport class NgxDualSelectModule { }\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n\nexport {NgxDualSelectComponent as Éµc} from './src/app/ngx-dual-select/components/dual-select/ngx-dual-select.component';\nexport {FilterPipe as Éµb} from './src/app/shared/pipes/filter.pipe';\nexport {SharedModule as Éµa} from './src/app/shared/shared.module';"],"names":["tslib_1.__decorate"],"mappings":"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"}