!function(e,n){"object"==typeof exports&&"undefined"!=typeof module?n(exports,require("@angular/core"),require("@angular/common")):"function"==typeof define&&define.amd?define("ngx-dual-select",["exports","@angular/core","@angular/common"],n):n((e=e||self)["ngx-dual-select"]={},e.ng.core,e.ng.common)}(this,(function(e,n,t){"use strict";
/*! *****************************************************************************
    Copyright (c) Microsoft Corporation. All rights reserved.
    Licensed under the Apache License, Version 2.0 (the "License"); you may not use
    this file except in compliance with the License. You may obtain a copy of the
    License at http://www.apache.org/licenses/LICENSE-2.0

    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
    MERCHANTABLITY OR NON-INFRINGEMENT.

    See the Apache Version 2.0 License for specific language governing permissions
    and limitations under the License.
    ***************************************************************************** */function o(e,n,t,o){var r,l=arguments.length,c=l<3?n:null===o?o=Object.getOwnPropertyDescriptor(n,t):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)c=Reflect.decorate(e,n,t,o);else for(var u=e.length-1;u>=0;u--)(r=e[u])&&(c=(l<3?r(c):l>3?r(n,t,c):r(n,t))||c);return l>3&&c&&Object.defineProperty(n,t,c),c}var r=function(){function e(){}return e.prototype.ngOnInit=function(){},e=o([n.Component({selector:"app-ngx-dual-select",template:"<p>\n  ngx-dual-select works!\n</p>\n<p>\n  ngx-dual-select works!\n</p><p>\n  ngx-dual-select works!\n</p><p>\n  ngx-dual-select works!\n</p>",styles:[""]})],e)}(),l=function(){function e(){}return e=o([n.NgModule({imports:[t.CommonModule],declarations:[r],exports:[r]})],e)}();e.NgxDualSelectModule=l,e.Éµa=r,Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=ngx-dual-select.umd.min.js.map